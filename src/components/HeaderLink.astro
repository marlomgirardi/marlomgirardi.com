---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		@apply relative px-4 py-2 rounded text-zinc-400 tracking-wider uppercase text-sm;
	}
	a:hover {
		@apply bg-zinc-800;
	}
	a.active {
		@apply text-primary;
	}
	a.active::after {
		@apply absolute bottom-2;
		@apply left-1/2 transform -translate-x-1/2;
		@apply block w-1/4 h-[1px] bg-primary;
		@apply content-[''];
		@apply animate-in duration-500 fade-in slide-in-from-right;
	}
</style>
